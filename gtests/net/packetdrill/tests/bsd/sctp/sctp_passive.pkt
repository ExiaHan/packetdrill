+0.0 socket(..., SOCK_STREAM, IPPROTO_SCTP) = 3
// Check the handshake with en empty(!) cookie
+0.0 bind(3, ..., ...) = 0
+0.0 listen(3, 1) = 0
+0.0 < sctp: INIT[tag=1 a_rwnd=1500 os=1 is=1 tsn=0]
+0.0 > sctp: INIT_ACK[tag=2 tsn=10] // faked cookie
+0.1 < sctp: COOKIE_ECHO[]; DATA[tsn=0 sid=0 ssn=0 ppid=0]// syntax not clear
+0.0 > sctp: COOKIE_ACK[]; SACK[tsn=0]
+0.0 accept(3, ..., ...) = 4
+0.0 read(4, ..., 1000) = 1000
// Send some data.
+1.0 write(4, ..., 1000) = 1000
+0.0 > sctp: DATA[tsn=10 sid=0 ssn=0 ppid=0]
+0.1 < sctp: SACK[tsn=10 a_rwnd=1500]
// Receive some data
+1.0 < sctp: DATA[tsn=1 sid=0 ssn=1 ppid=0] // How to handle payload?
+0.0 read(4, ..., 2000) = 1000
+0.2 > sctp: SACK[tsn=1]
// Receive more data, observe delayed SACKi
+1.0 < sctp: DATA[tsn=2 sid=0 ssn=2 ppid=0]
+0.0 read(4, ..., 2000) = 1000
+0.2 > sctp: SACK[tsn=2]
// Tear down the association
+1.0 < sctp: SHUTDOWN[tsn=0]
+0.0 > sctp: SHUTDOWN_ACK[]
+0.0 < sctp: SHUTDOWN_COMPLETE[]
+0.0 close(4) = 0
+0.0 close(3) = 0
